{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MAvCSQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBACF,MAAOC,EAAYC,EAAMC,IAmBJC,EAnB4BL,EAAEM,OAAOC,SAoBnD,IAAIF,GAAKG,KAAIC,GAAMC,OAAOD,EAAGE,UADtC,IAAuBN,EAlBrB,IAAIO,EAAQV,EAERE,GAAU,GACZnB,EAAA4B,OAAOC,QAAQ,2BAGjB,IAAK,IAAIC,EAAI,EAAGA,GAAKX,EAAQW,GAAK,EAChC5B,EAAc4B,EAAGH,GACdI,MAAK,EAAC5B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA4B,OAAOI,QAAQ,qBAAqB7B,QAAeC,UAEpD6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA4B,OAAOC,QAAQ,oBAAoB1B,QAAeC,UAEtDuB,GAAST","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const [firstDelay, step, amount] = valueToNumber(e.target.elements);\n  let delay = firstDelay;\n\n  if (amount <= 0) {\n    Notify.failure(`Put amount more than 0!`);\n  }\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\nfunction valueToNumber(arr) {\n  return [...arr].map(el => Number(el.value));\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","firstDelay","step","amount","arr","target","elements","map","el","Number","value","delay1","Notify","failure","i","then","success","catch"],"version":3,"file":"03-promises.ab2371a2.js.map"}